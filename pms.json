{
    "openapi": "3.0.1",
    "info": {
      "title": "Project Management Backend Service",
      "description": "Paisa API Documentation",
      "contact": {
        "name": "Admin",
        "url": "https://www.tejsoft.com",
        "email": "aditya@tejsoft.com"
      },
      "version": "v1"
    },
    "servers": [
      {
        "url": "https://stage-project.simpo.ai/",
        "description": "stage"
      }
    ],
    "tags": [
      {
        "name": "Project",
        "description": "APIs related to project management"
      },
      {
        "name": "Project Management You Work Page",
        "description": "APIs related to project management you work page"
      }
    ],
    "paths": {
      "/project": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Get All Projects and Project By Id",
          "operationId": "getAllProjects",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Create or Update a Project",
          "description": "    - Creates a new project if `id` is not provided.\n    - Updates an existing project if `id` is present.\n    - On create:\n        â€¢ Lead is added as ADMIN member\n        â€¢ Project settings and configuration are saved\n        â€¢ Default project states are created\n        â€¢ A home is created for the business (if not exists)\n\n    Required fields for CREATE:\n    - business.id\n    - name\n    - access\n    - createdBy.id\n    - createdBy.name\n\n    Required fields for UPDATE:\n    - id\n\n    Optional fields:\n    - description, imageUrl, icon, lead, leadMail, startDate, endDate\n",
          "operationId": "createOrUpdateProject",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                },
                "examples": {
                  "Create Project": {
                    "summary": "Minimal project creation payload",
                    "description": "Create Project",
                    "value": {
                      "business": {
                        "id": "1f057cf8-ce57-621c-afe8-d18ef667020e",
                        "name": "Anand Chikkam"
                      },
                      "name": "Website Redesign",
                      "description": "Sample project for website redesigning",
                      "imageUrl": "https://example.com/logo.png",
                      "icon": "web-icon",
                      "access": "PUBLIC",
                      "lead": {
                        "id": "1eff982e-749f-6652-99d0-a1fb0d5128f4",
                        "name": "Anand Chikkam"
                      },
                      "leadMail": "anand@example.com",
                      "createdBy": {
                        "id": "1eff982e-749f-6652-99d0-a1fb0d5128f4",
                        "name": "Anand Chikkam"
                      },
                      "startDate": "2025-07-01",
                      "endDate": "2025-09-25"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Project successfully created or updated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input or missing required fields",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/{projectId}/mark-default/{subStateId}": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Mark State as Default",
          "operationId": "changeProjectDefaultState",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "subStateId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/{projectId}/lead/update": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Add Project Lead",
          "operationId": "updateProjectLead",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseSubListModel"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/{projectId}/default-assignee/add": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Add Project Default Assignee",
          "operationId": "addProjectDefaultAssignee",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseSubListModel"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/workItem": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Get Work Items based on multiple filters",
          "description": "    This API retrieves a list of Work Items based on the provided filter criteria.\n\n    ### ðŸ”¹ Mandatory Fields:\n    - None. All fields are optional filters.\n\n    ### ðŸ”¸ Optional Filters (Non-Mandatory):\n    - `taskId` (UUID): Fetch a specific work item by ID.\n    - `businessId` (UUID): Filter by Business.\n    - `projectId` (UUID): Filter by Project.\n    - `moduleId` (List\u003CUUID\u003E): Filter by Module(s).\n    - `stateId` (List\u003CUUID\u003E): Filter by State(s).\n    - `viewId` (List\u003CUUID\u003E): Filter by View(s).\n    - `labelId` (List\u003CUUID\u003E): Filter by Label(s).\n    - `cycleId` (List\u003CUUID\u003E): Filter by Cycle(s).\n    - `leadId` (List\u003CUUID\u003E): Filter by Lead(s).\n    - `memberId` (List\u003CUUID\u003E): Filter by Member(s).\n    - `createdById` (List\u003CUUID\u003E): Filter by Creator(s).\n    - `assigneeId` (List\u003CUUID\u003E): Filter by Assignee(s).\n    - `startDate` (String): Filter work items starting from this date (format: `dd-MM-yyyy`).\n    - `endDate` (String): Filter work items up to this date (format: `dd-MM-yyyy`).\n    - `name` (String): Exact match of the Work Item title.\n    - `searchText` (String): Full-text search on title.\n\n    If `startDate` and `endDate` are provided, results are filtered by `startDate` range.\n",
          "operationId": "getAllWorkItem",
          "requestBody": {
            "description": "Filter parameters for fetching work items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "List of filtered Work Items",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input or format",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Delete WorkItem",
          "operationId": "deleteWorkItem",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/work-item/{workItemId}/update/function": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "UPDATE WORK-ITEM FUNCTIONS",
          "operationId": "updateWorkItemFunction",
          "parameters": [
            {
              "name": "workItemId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWorkItemFunction"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/work-item/{workItemId}/add-attachment": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Add WorkItem Attachment",
          "operationId": "addWorkItemAttachment",
          "parameters": [
            {
              "name": "workItemId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemAttachment"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/work-item/update-sub-state": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Update work item sub-state",
          "operationId": "updateWorkItemSubState",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWorkItemState"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/widgets/toggle": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Manage Widgets toggle",
          "operationId": "manageWidgets",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/view/{viewId}/favourite": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Mark View as Favourite",
          "operationId": "markViewAsFavourite",
          "parameters": [
            {
              "name": "viewId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "isFav",
              "in": "query",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/status": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Change Status of the Project features",
          "operationId": "toggleProjectFeatures",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "isActive",
              "in": "query",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "feature",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/status-project": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Update Project Status",
          "operationId": "updateProjectStatus",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "NOT_STARTED",
                  "STARTED",
                  "COMPLETED",
                  "OVERDUE"
                ]
              }
            },
            {
              "name": "isFavourite",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "isArchived",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/states/sub-states/update": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Update Sub-State Name and Color",
          "operationId": "updateSubState",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubStateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/states/sub-states/reorder": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Reorder Sub-States of a Project State",
          "operationId": "reorderSubStates",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReorderSubState"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/remove-favourites": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Remove from favourites",
          "operationId": "removeFavourites",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "type",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "CYCLE",
                  "MODULE",
                  "VIEW",
                  "PROJECT",
                  "PAGE"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/module": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Get All Modules and module By Id",
          "operationId": "getAllModules",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Create Modules",
          "operationId": "createOrUpdateModule",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Delete Module",
          "operationId": "deleteModule",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/module/{moduleId}/favourite": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Mark Module as Favourite",
          "operationId": "markModuleAsFavourite",
          "parameters": [
            {
              "name": "moduleId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "isFav",
              "in": "query",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/migrate-workItem": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Migrate WorkItem for State Master",
          "description": "For assigning missing state master in the workitems",
          "operationId": "migrateWorkItem",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/migrate-timeline": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Migrate Timeline for Business and Project",
          "description": "For assigning missing project and business and the workItem timelines",
          "operationId": "migrateTimeline",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/migrate-bugnumber": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Migrate Bug Number",
          "description": "For fixing duplicate displayBugNum inside workItems",
          "operationId": "migrateBugNumber",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/project/home/widgets-update": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Update Home Widgets",
          "operationId": "updateHomeWidget",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeWidgetUpdate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/filter": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Filter Projects",
          "operationId": "filterProjects",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFilterRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/cycle/{cycleId}/favourite": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Mark Cycle as Favourite",
          "operationId": "markCycleAsFavourite",
          "parameters": [
            {
              "name": "cycleId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "isFav",
              "in": "query",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/cycle/transfer": {
        "put": {
          "tags": [
            "Project"
          ],
          "summary": "Transfer Cycle",
          "operationId": "transferCycle",
          "parameters": [
            {
              "name": "transferFromCycleId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "transferToCycleId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/page/{pageId}/lock-unlock": {
        "put": {
          "tags": [
            "page-controller"
          ],
          "summary": "Lock/Unlock Page",
          "operationId": "lockUnlockPage",
          "parameters": [
            {
              "name": "pageId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "isLocked",
              "in": "query",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/page/{pageId}/favourite": {
        "put": {
          "tags": [
            "page-controller"
          ],
          "summary": "Mark Page as Favourite/Un-Favourite",
          "operationId": "markPageAsFavourite",
          "parameters": [
            {
              "name": "pageId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "isFav",
              "in": "query",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/notification/status-update": {
        "put": {
          "tags": [
            "notification-controller"
          ],
          "summary": "update the status of the notification",
          "operationId": "getAllMembers",
          "parameters": [
            {
              "name": "notificationId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "status",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "UNREAD",
                  "READ",
                  "ARCHIVED",
                  "SNOOZED"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/work-items/comment": {
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Add Comment to WorkItem Timeline",
          "operationId": "addComment",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemCommentRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/work-item": {
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Create or Update a Work Item",
          "description": "    - Creates a new work item if `id` is not provided.\n    - Updates an existing work item if `id` is present.\n    - On create:\n        â€¢ Assigns default state (Backlog) if not provided\n        â€¢ Handles parent-child relationship if `parent` is given\n        â€¢ Adds to provided modules (if any)\n\n    Required fields for CREATE:\n    - title\n    - project.id\n    - createdBy.id\n    - createdBy.name\n\n    Required fields for UPDATE:\n    - id\n\n    Optional fields:\n    - description\n    - type\n    - priority\n    - state.id\n    - assignees (list of staff)\n    - parent (work item)\n    - modules (list of modules)\n    - startDate\n    - endDate\n",
          "operationId": "createOrUpdateWorkItem",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem"
                },
                "examples": {
                  "Create Work Item": {
                    "summary": "Minimal work item creation payload",
                    "description": "Create Work Item",
                    "value": {
                      "title": "Design login screen",
                      "description": "Initial design for user authentication UI",
                      "type": "FEATURE",
                      "priority": "HIGH",
                      "project": {
                        "id": "1111aaaa-2222-bbbb-3333-cccc4444dddd"
                      },
                      "createdBy": {
                        "id": "abcd1234-ef56-7890-gh12-ijklmnop3456",
                        "name": "Aditya Lall"
                      },
                      "assignees": [
                        {
                          "id": "staff-1234",
                          "name": "John Doe"
                        }
                      ],
                      "parent": {
                        "id": "parent-work-item-id",
                        "name": "Authentication Epic"
                      },
                      "modules": [
                        {
                          "id": "module-uuid-1",
                          "name": "Frontend"
                        }
                      ],
                      "startDate": "2025-07-28",
                      "endDate": "2025-08-10"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Work item successfully created or updated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input or missing required fields",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/view": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get All View and View By Id",
          "operationId": "getAllView",
          "parameters": [
            {
              "name": "businessId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "projectId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Create View",
          "operationId": "createOrUpdateView",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Delete View",
          "operationId": "deleteView",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/states/sub-states/add": {
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Add Sub-State to a Project State",
          "operationId": "addSubState",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddSubState"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/setting": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get All Members , Labels of the Project",
          "operationId": "getAllMembers_1",
          "parameters": [
            {
              "name": "projectId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "businessId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "searchText",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Create Members And Labels for The Project",
          "operationId": "createProjectSetting",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSetting"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/member/add": {
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Add Project Member",
          "operationId": "addProjectMembers",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProjectMemberRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/label": {
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Add/Update Label for project",
          "operationId": "addUpdateLabel",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectLabel"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/home": {
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Add/Update Home",
          "operationId": "addUpdateHome",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Home"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/home/{homeId}/stickies": {
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Add/Update Home Stickies",
          "operationId": "createStickies",
          "parameters": [
            {
              "name": "homeId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeStickies"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/home/{homeId}/quick-links": {
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Add/Update Home Quicklink",
          "operationId": "createQuickLinks",
          "parameters": [
            {
              "name": "homeId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeQuickLink"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/cycle": {
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Create or Update a Cycle",
          "operationId": "createOrUpdateCycle",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CycleRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Project"
          ],
          "operationId": "deleteCycle",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/add-sub-work-item": {
        "post": {
          "tags": [
            "Project"
          ],
          "summary": "Add Sub Work Item",
          "operationId": "addSubWorkItem",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddSubWorkItem"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/page": {
        "post": {
          "tags": [
            "page-controller"
          ],
          "summary": "Create or Update a Page",
          "operationId": "createOrUpdate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/your-work/subscribed/{staffId}": {
        "get": {
          "tags": [
            "Project Management You Work Page"
          ],
          "summary": "Get Subscribed Work Items",
          "description": "Fetches all work items where the specified staff member is involved. Involvement includes:\n1. Being the assignee,\n2. Being the creator or last updater,\n3. Being mentioned in the timeline (via `assigneeOrMentions` field).\n\nThe response merges all these sources and removes duplicates to return a unique set of `WorkItem`s.\n\n**Mandatory Fields (Required):**\n- `staffId` (UUID): Unique identifier of the staff whose subscribed work items are to be retrieved.\n\n**Optional Fields (Non-Mandatory):**\n- No optional request fields for this API (it's a simple path variable fetch).\n\n**Notes:**\n- This API returns all related work items even if the user is not the direct assignee but mentioned in timeline.\n- Useful for showing the staffâ€™s engagement across the workspace.\n",
          "operationId": "getSubscribed",
          "parameters": [
            {
              "name": "staffId",
              "in": "path",
              "description": "UUID of the staff member",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
            },
            {
              "name": "businessId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "projectId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully fetched subscribed work items",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkItem"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid staffId format",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/your-work/project-wise-summary/{staffId}": {
        "get": {
          "tags": [
            "Project Management You Work Page"
          ],
          "summary": "Get Project-Wise Work Summary for a Staff Member",
          "description": "This API returns a project-wise breakdown of work items for a specific staff member.\n\nIt aggregates:\n- Total work items created by the staff\n- Work items assigned (direct + timeline assignment)\n- Completed or cancelled items\n- Overdue items (where `endDate` is in the past)\n- Completion percentage = (Completed / Assigned) * 100\n\nAlso includes project metadata for projects where the member is assigned but hasnâ€™t worked yet.\n\nAdditionally, staff details such as name, display name, join date, and timezone are returned in the response.\n",
          "operationId": "getProjectWiseSummaryWithStaff",
          "parameters": [
            {
              "name": "staffId",
              "in": "path",
              "description": "UUID of the staff member for whom to retrieve the summary",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "d3f29f8c-cbb9-4a9c-911c-90db4ff81f62"
            },
            {
              "name": "businessId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "projectId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully fetched the project-wise summary for the staff",
              "content": {
                "application/json": {
  
                }
              }
            },
            "400": {
              "description": "Invalid or missing staffId",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error while fetching summary",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/your-work/overview/{staffId}": {
        "get": {
          "tags": [
            "Project Management You Work Page"
          ],
          "summary": "Get Work Item Overview for a Staff Member",
          "description": "Returns an overview summary of work items for a specific staff member.\n\nThis includes:\n- Total work items **created** by the staff\n- Total **assigned** work items (currently active)\n- **Subscribed** work items (created, assigned, or updated by the staff)\n- **Workload distribution** across parent project states (e.g., Backlog, In Progress)\n- **State distribution** of assigned work items\n- **Priority distribution** of assigned items\n\nThe state mapping uses the `SubState -\u003E ProjectState` hierarchy to compute parent states.\n",
          "operationId": "getOverview",
          "parameters": [
            {
              "name": "staffId",
              "in": "path",
              "description": "UUID of the staff member whose overview is to be fetched",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "c31af2a5-b4c3-4c02-8914-7ab907da0e44"
            },
            {
              "name": "businessId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "projectId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully fetched the overview summary",
              "content": {
                "application/json": {
  
                }
              }
            },
            "400": {
              "description": "Invalid or missing staffId",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error while computing the overview",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/your-work/created/{staffId}": {
        "get": {
          "tags": [
            "Project Management You Work Page"
          ],
          "summary": "Get Created Work Items for Staff",
          "description": "    Retrieves all work items that were created by the specified staff member.\n\n    ### ðŸ”¹ Mandatory Field (Required):\n    - `staffId` (UUID - Path Variable):\n        - Unique identifier of the staff member.\n        - Used to filter work items by the `createdBy` field.\n        - If missing or invalid, returns `400 Bad Request`.\n\n    ### ðŸ”¸ Non-Mandatory Fields (Returned in Response WorkItem object):\n    The response will include a list of `WorkItem` objects with various optional fields, depending on the structure of your model:\n\n    - `id` (UUID): Unique identifier of the work item.\n    - `title` (String): Title or summary of the task.\n    - `description` (String): Task details or notes.\n    - `priority` (Enum: `LOW`, `MEDIUM`, `HIGH`, etc.): Task priority.\n    - `state` (Enum: `TODO`, `IN_PROGRESS`, `COMPLETED`, `CANCELLED`, `BACKLOG`): Current task status.\n    - `createdBy`: Object containing staff ID, name, etc.\n    - `assignee`: The person assigned to this work item (if any).\n    - `dueDate`, `createdDate`, `updatedDate` (Date): Task timeline info.\n    - `project`, `module`, `cycle`, `tags`, etc. (if linked).\n\n    \u003E Note: The fields above are not required in the request, but are part of the response model.\n",
          "operationId": "getCreated",
          "parameters": [
            {
              "name": "staffId",
              "in": "path",
              "description": "UUID of the staff member to fetch created work items for",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "businessId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "projectId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully fetched work items created by the staff member",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid or missing staffId",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/your-work/assigned/{staffId}": {
        "get": {
          "tags": [
            "Project Management You Work Page"
          ],
          "summary": "Get Assigned Work Items for Staff",
          "description": "    Retrieves all work items where the specified staff member is the assignee.\n\n    ### ðŸ”¹ Mandatory Field (Required):\n    - `staffId` (UUID - Path Variable):\n        - Unique identifier of the staff member.\n        - Used to filter all work items assigned to this specific user.\n        - If missing or invalid, the API returns a `400 Bad Request`.\n\n    ### ðŸ”¸ Non-Mandatory Fields (Returned in Response WorkItem object):\n    Each returned `WorkItem` may include the following fields (structure depends on your WorkItem model):\n\n    - `id` (UUID): Unique ID of the work item.\n    - `title` (String): Title or name of the task.\n    - `description` (String): Detailed description of the task.\n    - `priority` (Enum: `LOW`, `MEDIUM`, `HIGH`, etc.): Priority level of the work item.\n    - `status` or `state`: Current progress status (`TODO`, `IN_PROGRESS`, `COMPLETED`, etc.).\n    - `assignee`: Object with `id`, `name`, etc.\n    - `reporter`: Who created or reported the task.\n    - `dueDate`, `createdDate`, `updatedDate` (Date): Timestamps.\n    - Any project/module/sprint associations.\n\n    \u003E Note: The structure of the WorkItem class will determine what fields are returned.\n",
          "operationId": "getAssigned",
          "parameters": [
            {
              "name": "staffId",
              "in": "path",
              "description": "UUID of the staff member to fetch assigned work items for",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "businessId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "projectId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Assigned work items fetched successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid or missing staffId",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/your-work/activity/{staffId}": {
        "get": {
          "tags": [
            "Project Management You Work Page"
          ],
          "summary": "Get User Activity Timeline",
          "description": "Fetches all timeline activities performed by a given staff member.\nEach timeline record represents an event such as status changes, mentions, or comments on a work item.\n\n**Mandatory Fields (Required):**\n- `staffId` (UUID): Unique identifier of the staff whose activity needs to be fetched.\n\n**Optional Fields (Non-Mandatory):**\n- None. All filtering is done on the backend based on staff ID.\n\n**Notes:**\n- This endpoint is used to show a staffâ€™s historical activity across all work items.\n- Returns a list of `Timeline` documents associated with the given user.\n",
          "operationId": "getActivity",
          "parameters": [
            {
              "name": "staffId",
              "in": "path",
              "description": "UUID of the staff member whose activity is to be retrieved",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
            },
            {
              "name": "businessId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "projectId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully fetched activity timeline",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Timeline"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid staffId format",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/{projectId}/member": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get Project Members",
          "description": "    Retrieves a list of all members assigned to the specified project.\n\n    ### ðŸ”¹ Mandatory Field (Required):\n    - `projectId` (UUID - Path Variable):\n        - Unique identifier of the project whose members you want to retrieve.\n        - Must be a valid UUID.\n        - If not provided or invalid, API will return a `400 Bad Request`.\n\n    ### ðŸ”¸ Non-Mandatory Fields (Returned as part of response):\n    Each member object contains the following fields:\n\n    - `id` (UUID): Unique ID of the member entry (auto-generated).\n    - `memberId` (UUID): Reference to the actual member/staff.\n    - `project` (Object):\n        - `id` (UUID): ID of the project.\n        - `name` (String): Name of the project.\n    - `name` (String): Name of the project member.\n    - `email` (String): Email ID of the member.\n    - `displayName` (String): Display name or alias.\n    - `joiningDate` (Date): Member's joining date (defaults to current date if not set).\n    - `type` (Enum: `INTERNAL`, `EXTERNAL`, etc.): Access type of member.\n    - `staff` (Object): Reference to staff object with `id`, `name`.\n    - `role` (Enum: `ADMIN`, `MANAGER`, `CONTRIBUTOR`, etc.): Role of the member in the project.\n\n    \u003E Note: The actual member data is fetched based on the provided `projectId` from the MongoDB `Members` collection.\n",
          "operationId": "getProjectMember",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "description": "UUID of the project to fetch members for",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of project members retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "400": {
              "description": "Missing or invalid projectId",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/{projectId}/label": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get Project Label",
          "operationId": "getProjectLabel",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/{parentId}/user": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get Sub WorkItems by Parent WorkItem ID",
          "operationId": "getSubWorkItemByParent",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/{businessId}/list-fav": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get All Favourites by Business",
          "operationId": "getAllBusinessFav",
          "parameters": [
            {
              "name": "businessId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/your-work": {
        "get": {
          "tags": [
            "Project"
          ],
          "operationId": "addYourWork",
          "parameters": [
            {
              "name": "businessId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "memberId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "projectId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/workItem/user": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get All WorkItems Of Particular User of Business",
          "operationId": "getAllWorkItemUser",
          "parameters": [
            {
              "name": "workItemId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/work-items/{id}/timeline": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get WorkItem Timeline",
          "operationId": "getTimeline",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/view/id": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get View By Id",
          "operationId": "getViewById",
          "parameters": [
            {
              "name": "viewId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/states/{projectId}/sub-states": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get All Sub-States for a Project",
          "operationId": "getSubStatesForProject",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/states/{projectId}/states": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get Project States",
          "operationId": "getStatesForProject",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/module/id": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get Module By Id",
          "operationId": "getModuleById",
          "parameters": [
            {
              "name": "moduleId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/memberId": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get Projects of particular member",
          "operationId": "getProjectsByMemberId",
          "parameters": [
            {
              "name": "businessId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "memberId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/home/{businessId}": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get Home",
          "operationId": "getBusinessHome",
          "parameters": [
            {
              "name": "businessId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/get-all-data": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get All The Home Data",
          "operationId": "getAllData",
          "parameters": [
            {
              "name": "businessId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "project",
              "in": "query",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "workItem",
              "in": "query",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "pages",
              "in": "query",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/default-cycle": {
        "get": {
          "tags": [
            "Project"
          ],
          "operationId": "getDefaultCycle",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/dashboard": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Project Dashboard",
          "operationId": "projectDashboard",
          "parameters": [
            {
              "name": "businessId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/cycle/{projectId}/active-analytics": {
        "get": {
          "tags": [
            "Project"
          ],
          "summary": "Get Project Active Cycle Analytics",
          "operationId": "activeCycleAnalytics",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/cycle/id": {
        "get": {
          "tags": [
            "Project"
          ],
          "operationId": "getCycleById",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/cycle/get-all": {
        "get": {
          "tags": [
            "Project"
          ],
          "operationId": "getAllCycles",
          "parameters": [
            {
              "name": "businessId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "projectId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/page/{projectId}": {
        "get": {
          "tags": [
            "page-controller"
          ],
          "summary": "Get Pages for Project",
          "operationId": "getPages",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/page/module/{moduleId}": {
        "get": {
          "tags": [
            "page-controller"
          ],
          "summary": "Get Module Linked Pages",
          "operationId": "getModuleLinkedPages",
          "parameters": [
            {
              "name": "moduleId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/page/detail/{pageId}": {
        "get": {
          "tags": [
            "page-controller"
          ],
          "summary": "Get Single Page Detail",
          "operationId": "getPageDetail",
          "parameters": [
            {
              "name": "pageId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/page/cycle/{cycleId}": {
        "get": {
          "tags": [
            "page-controller"
          ],
          "summary": "Get Cycle Linked Pages",
          "operationId": "getCycleLinkedPages",
          "parameters": [
            {
              "name": "cycleId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/notification": {
        "get": {
          "tags": [
            "notification-controller"
          ],
          "summary": "get notification by memberId",
          "operationId": "getNotifications",
          "parameters": [
            {
              "name": "businessId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "assigneeId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/notification/status": {
        "get": {
          "tags": [
            "notification-controller"
          ],
          "summary": "get notification by Status wise",
          "operationId": "getNotifications_1",
          "parameters": [
            {
              "name": "businessId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "assigneeId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "UNREAD",
                  "READ",
                  "ARCHIVED",
                  "SNOOZED"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/{parentId}/remove-sub": {
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Remove Sub Work Item",
          "operationId": "removeSubWorkItem",
          "parameters": [
            {
              "name": "parentId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "childId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/{labelId}/delete": {
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Delete Project Label",
          "operationId": "deleteProjectLabel",
          "parameters": [
            {
              "name": "labelId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/work-item/{workItemId}/remove-attachment/{attachmentId}": {
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Delete WorkItem Attachment",
          "operationId": "removeWorkItemAttachment",
          "parameters": [
            {
              "name": "workItemId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "attachmentId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/states/{stateId}/sub-states/{subStateId}/delete": {
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Delete Sub-State from Project State",
          "operationId": "deleteSubState",
          "parameters": [
            {
              "name": "stateId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "subStateId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/quick-links": {
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Delete QuickLinks",
          "operationId": "deleteQuickLinks",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "type",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "QUICKLINKS",
                  "STICKES"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/member/{id}/remove": {
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Remove Project Member",
          "operationId": "removeProjectMembers",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/home/{homeId}/stickies/{stickyId}/delete": {
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Remove Home Stickies",
          "operationId": "removeStickies",
          "parameters": [
            {
              "name": "homeId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "stickyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/home/{homeId}/quick-links/{linkId}/delete": {
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Remove Home Quicklink",
          "operationId": "removeQuickLinks",
          "parameters": [
            {
              "name": "homeId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "linkId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/project/delete": {
        "delete": {
          "tags": [
            "Project"
          ],
          "summary": "Delete Project",
          "operationId": "deleteProject",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      },
      "/page/{pageId}": {
        "delete": {
          "tags": [
            "page-controller"
          ],
          "summary": "Delete Page",
          "operationId": "deletePage",
          "parameters": [
            {
              "name": "pageId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "ProjectRequest": {
          "type": "object",
          "properties": {
            "businessId": {
              "type": "string",
              "format": "uuid"
            },
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "searchText": {
              "type": "string"
            },
            "createdBy": {
              "type": "string"
            },
            "defaultAssignee": {
              "type": "string"
            },
            "sortField": {
              "type": "string"
            },
            "sortDirection": {
              "type": "string"
            },
            "isArchived": {
              "type": "boolean"
            },
            "status": {
              "type": "string",
              "enum": [
                "NOT_STARTED",
                "STARTED",
                "COMPLETED",
                "OVERDUE"
              ]
            },
            "staffId": {
              "type": "string",
              "format": "uuid"
            },
            "access": {
              "type": "string",
              "enum": [
                "PUBLIC",
                "PRIVATE"
              ]
            },
            "lead": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "members": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "startDate": {
              "type": "string"
            },
            "endDate": {
              "type": "string"
            }
          }
        },
        "Response": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object"
            }
          }
        },
        "BaseSubListModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "ModuleRequest": {
          "type": "object",
          "properties": {
            "taskId": {
              "type": "string",
              "format": "uuid"
            },
            "businessId": {
              "type": "string",
              "format": "uuid"
            },
            "moduleId": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "projectId": {
              "type": "string",
              "format": "uuid"
            },
            "stateId": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "leadId": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "memberId": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "viewId": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "labelId": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "cycleId": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "priority": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "HIGH",
                  "LOW",
                  "MEDIUM",
                  "URGENT",
                  "NONE"
                ]
              }
            },
            "createdById": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "assigneeId": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "startDate": {
              "type": "string"
            },
            "endDate": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "searchText": {
              "type": "string"
            }
          }
        },
        "UpdateWorkItemFunction": {
          "type": "object",
          "properties": {
            "state": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "assignee": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "priority": {
              "type": "string",
              "enum": [
                "HIGH",
                "LOW",
                "MEDIUM",
                "URGENT",
                "NONE"
              ]
            },
            "startDate": {
              "type": "string",
              "format": "date-time"
            },
            "endDate": {
              "type": "string",
              "format": "date-time"
            },
            "modules": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "cycle": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "label": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkItemLabel"
              }
            },
            "user": {
              "$ref": "#/components/schemas/BaseSubListModel"
            }
          }
        },
        "WorkItemLabel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            },
            "color": {
              "type": "string"
            }
          }
        },
        "WorkItemAttachment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "url": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "staff": {
              "$ref": "#/components/schemas/BaseSubListModel"
            }
          }
        },
        "UpdateWorkItemState": {
          "type": "object",
          "properties": {
            "workItemId": {
              "type": "string",
              "format": "uuid"
            },
            "subState": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "staff": {
              "$ref": "#/components/schemas/BaseSubListModel"
            }
          }
        },
        "WidgetRequest": {
          "type": "object",
          "properties": {
            "businessId": {
              "type": "string",
              "format": "uuid"
            },
            "qucikLinks": {
              "type": "boolean"
            },
            "recents": {
              "type": "boolean"
            },
            "stickies": {
              "type": "boolean"
            }
          }
        },
        "SubStateRequest": {
          "type": "object",
          "properties": {
            "stateId": {
              "type": "string",
              "format": "uuid"
            },
            "subStateId": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "color": {
              "type": "string"
            }
          }
        },
        "ReorderSubState": {
          "type": "object",
          "properties": {
            "stateId": {
              "type": "string",
              "format": "uuid"
            },
            "subStateOrder": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SubStateOrderUpdateRequest"
              }
            }
          }
        },
        "SubStateOrderUpdateRequest": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "order": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "HomeWidgetUpdate": {
          "type": "object",
          "properties": {
            "homeId": {
              "type": "string",
              "format": "uuid"
            },
            "type": {
              "type": "string",
              "enum": [
                "QUICKLINK",
                "RECENT",
                "STICKIES"
              ]
            },
            "status": {
              "type": "boolean"
            }
          }
        },
        "ProjectFilterRequest": {
          "type": "object",
          "properties": {
            "businessId": {
              "type": "string",
              "format": "uuid"
            },
            "access": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PUBLIC",
                  "PRIVATE"
                ]
              }
            },
            "lead": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "members": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "startDate": {
              "type": "string"
            },
            "endDate": {
              "type": "string"
            }
          }
        },
        "Project": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "projectDisplayId": {
              "type": "string"
            },
            "business": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "imageUrl": {
              "type": "string"
            },
            "icon": {
              "type": "string"
            },
            "access": {
              "type": "string",
              "enum": [
                "PUBLIC",
                "PRIVATE"
              ]
            },
            "lead": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "leadMail": {
              "type": "string"
            },
            "defaultAsignee": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "createdBy": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "status": {
              "type": "string",
              "enum": [
                "NOT_STARTED",
                "STARTED",
                "COMPLETED",
                "OVERDUE"
              ]
            },
            "startDate": {
              "type": "string",
              "format": "date-time"
            },
            "endDate": {
              "type": "string",
              "format": "date-time"
            },
            "favourite": {
              "type": "boolean"
            },
            "createdTimeStamp": {
              "type": "string",
              "format": "date-time"
            },
            "updatedTimeStamp": {
              "type": "string",
              "format": "date-time"
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "active": {
              "type": "boolean"
            },
            "archived": {
              "type": "boolean"
            },
            "exist": {
              "type": "boolean"
            }
          }
        },
        "WorkItemCommentRequest": {
          "type": "object",
          "properties": {
            "workItemId": {
              "type": "string",
              "format": "uuid"
            },
            "commentText": {
              "type": "string"
            },
            "user": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "mentions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            }
          }
        },
        "AddLink": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "displayTitle": {
              "type": "string"
            }
          }
        },
        "Timeline": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "business": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "project": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "workItemId": {
              "type": "string",
              "format": "uuid"
            },
            "workItemTitle": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "CREATED",
                "UPDATED",
                "STATUS_CHANGED",
                "COMMENTED",
                "ASSIGNEE_CHANGED",
                "STATE_CHANGED",
                "PRIORITY_CHANGED",
                "ATTACHMENT_ADDED",
                "START_DATE_CHANGED",
                "END_DATE_CHANGED",
                "MODULE_CHANGED",
                "CYCLE_CHANGED",
                "LABEL_CHANGED"
              ]
            },
            "user": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "assigneeOrMentions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "commentText": {
              "type": "string"
            },
            "fieldChanged": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "oldValue": {
              "type": "string"
            },
            "newValue": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "WorkItem": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "startDate": {
              "type": "string",
              "format": "date-time"
            },
            "endDate": {
              "type": "string",
              "format": "date-time"
            },
            "stateMaster": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "state": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "business": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "lead": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "priority": {
              "type": "string",
              "enum": [
                "HIGH",
                "LOW",
                "MEDIUM",
                "URGENT",
                "NONE"
              ]
            },
            "assignee": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "label": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkItemLabel"
              }
            },
            "cycle": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "modules": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "parent": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "project": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "view": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "displayBugNo": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "ACCEPTED",
                "DECLINED"
              ]
            },
            "createdBy": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "updatedBy": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "attachmentUrl": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkItemAttachment"
              }
            },
            "link": {
              "$ref": "#/components/schemas/AddLink"
            },
            "estimates": {
              "type": "string"
            },
            "createdTimeStamp": {
              "type": "string",
              "format": "date-time"
            },
            "updatedTimeStamp": {
              "type": "string",
              "format": "date-time"
            },
            "timeline": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Timeline"
              }
            }
          }
        },
        "View": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "project": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "startDate": {
              "type": "string"
            },
            "endDate": {
              "type": "string"
            },
            "createdBy": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "state": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "business": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "lead": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "priority": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "HIGH",
                  "LOW",
                  "MEDIUM",
                  "URGENT",
                  "NONE"
                ]
              }
            },
            "assignee": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "label": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "cycle": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "modules": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "createdTimeStamp": {
              "type": "string",
              "format": "date-time"
            },
            "favourite": {
              "type": "boolean"
            }
          }
        },
        "AddSubState": {
          "type": "object",
          "properties": {
            "projectStateId": {
              "type": "string",
              "format": "uuid"
            },
            "newSubStateName": {
              "type": "string"
            },
            "newSubStateDesc": {
              "type": "string"
            },
            "newSubStateColor": {
              "type": "string"
            }
          }
        },
        "ProjectConfiguration": {
          "type": "object",
          "properties": {
            "cycles": {
              "type": "boolean"
            },
            "modules": {
              "type": "boolean"
            },
            "pages": {
              "type": "boolean"
            },
            "intake": {
              "type": "boolean"
            },
            "view": {
              "type": "boolean"
            },
            "timeTracking": {
              "type": "boolean"
            }
          }
        },
        "ProjectSetting": {
          "type": "object",
          "properties": {
            "projectId": {
              "type": "string",
              "format": "uuid"
            },
            "projectName": {
              "type": "string"
            },
            "projectDescription": {
              "type": "string"
            },
            "imageUrl": {
              "type": "string"
            },
            "icon": {
              "type": "string"
            },
            "projectDisplayId": {
              "type": "string"
            },
            "businessId": {
              "type": "string",
              "format": "uuid"
            },
            "businessName": {
              "type": "string"
            },
            "features": {
              "$ref": "#/components/schemas/ProjectConfiguration"
            },
            "accessType": {
              "type": "string",
              "enum": [
                "PUBLIC",
                "PRIVATE"
              ]
            },
            "timeZone": {
              "type": "string"
            },
            "lead": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "defaultAssignee": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "status": {
              "type": "string",
              "enum": [
                "NOT_STARTED",
                "STARTED",
                "COMPLETED",
                "OVERDUE"
              ]
            },
            "createdTimeStamp": {
              "type": "string",
              "format": "date-time"
            },
            "guestAccess": {
              "type": "boolean"
            }
          }
        },
        "Module": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "startDate": {
              "type": "string",
              "format": "date-time"
            },
            "endDate": {
              "type": "string",
              "format": "date-time"
            },
            "stateMaster": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "state": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "business": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "lead": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "priority": {
              "type": "string",
              "enum": [
                "HIGH",
                "LOW",
                "MEDIUM",
                "URGENT",
                "NONE"
              ]
            },
            "assignee": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "label": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkItemLabel"
              }
            },
            "cycle": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "modules": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "parent": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "project": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "createdTimeStamp": {
              "type": "string",
              "format": "date-time"
            },
            "completionPercentage": {
              "type": "number",
              "format": "double"
            },
            "favourite": {
              "type": "boolean"
            }
          }
        },
        "AddProjectMemberRequest": {
          "type": "object",
          "properties": {
            "business": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "project": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Members"
              }
            }
          }
        },
        "Members": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "memberId": {
              "type": "string",
              "format": "uuid"
            },
            "project": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "joiningDate": {
              "type": "string",
              "format": "date-time"
            },
            "type": {
              "type": "string",
              "enum": [
                "PUBLIC",
                "PRIVATE"
              ]
            },
            "staff": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "role": {
              "type": "string",
              "enum": [
                "GUEST",
                "ADMIN",
                "MEMBER"
              ]
            }
          }
        },
        "ProjectLabel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "project": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "label": {
              "type": "string"
            },
            "color": {
              "type": "string"
            }
          }
        },
        "Home": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "business": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "widgets": {
              "$ref": "#/components/schemas/Widgets"
            },
            "quickLink": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HomeQuickLink"
              }
            },
            "stickies": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HomeStickies"
              }
            },
            "createdTimeStamp": {
              "type": "string",
              "format": "date-time"
            },
            "updatedTimeStamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "HomeQuickLink": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "logo": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "displayTitle": {
              "type": "string"
            },
            "createdDate": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "HomeStickies": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "text": {
              "type": "string"
            },
            "color": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "Widgets": {
          "type": "object",
          "properties": {
            "quickLinks": {
              "type": "boolean"
            },
            "recents": {
              "type": "boolean"
            },
            "stickies": {
              "type": "boolean"
            }
          }
        },
        "CycleRequest": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "title": {
              "type": "string"
            },
            "businessId": {
              "type": "string",
              "format": "uuid"
            },
            "projectId": {
              "type": "string",
              "format": "uuid"
            },
            "description": {
              "type": "string"
            },
            "startDate": {
              "type": "string",
              "format": "date-time"
            },
            "endDate": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "AddSubWorkItem": {
          "type": "object",
          "properties": {
            "parentId": {
              "type": "string",
              "format": "uuid"
            },
            "subWorkItemIdList": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "Page": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "title": {
              "type": "string"
            },
            "content": {
              "type": "string"
            },
            "business": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "project": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "createdBy": {
              "$ref": "#/components/schemas/BaseSubListModel"
            },
            "visibility": {
              "type": "string",
              "enum": [
                "PUBLIC",
                "PRIVATE",
                "ARCHIVED"
              ]
            },
            "linkedCycle": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "linkedModule": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSubListModel"
              }
            },
            "locked": {
              "type": "boolean"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "favourite": {
              "type": "boolean"
            }
          }
        }
      },
      "securitySchemes": {
        "Bearer Authentication": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }